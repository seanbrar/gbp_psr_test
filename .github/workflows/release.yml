name: Release

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Run in no-op mode to preview changes'
        required: false
        type: boolean
        default: true

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: false
    permissions:
      contents: write # Needed for gh release create and git push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.SEMANTIC_RELEASE_PAT }}

      - name: Versioning and Changelog
        id: release
        uses: python-semantic-release/python-semantic-release@v10.2.0
        with:
          github_token: ${{ secrets.SEMANTIC_RELEASE_PAT }}
          no_operation_mode: ${{ github.event.inputs.dry_run }}
          # Tell semantic-release NOT to create the release itself
          vcs_release: false

      - name: Debug Release Notes Output
        # This step helps us see what's in the release_notes variable
        if: steps.release.outputs.released == 'true'
        run: |
          echo "--- START OF RELEASE NOTES ---"
          echo "${{ steps.release.outputs.release_notes }}"
          echo "--- END OF RELEASE NOTES ---"

      - name: Create GitHub Release and Upload Artifacts
        if: steps.release.outputs.released == 'true'
        env:
          GH_TOKEN: ${{ secrets.SEMANTIC_RELEASE_PAT }}
        run: |
          # Pipe the release notes directly into the gh command
          echo "${{ steps.release.outputs.release_notes }}" | gh release create ${{ steps.release.outputs.tag }} \
            --title "${{ steps.release.outputs.tag }}" \
            --notes-file - \
            dist/*

      - name: Dry Run Summary
        if: github.event.inputs.dry_run == true && steps.release.outputs.version != ''
        run: |
          {
            echo "## ðŸš€ Dry Run Completed"
            echo "A new release **v${{ steps.release.outputs.version }}** is ready."
            echo "The following release notes would be generated:"
            echo "${{ steps.release.outputs.release_notes }}"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Release Summary
        if: steps.release.outputs.released == 'true'
        run: |
          {
            echo "## âœ… Release Successful"
            echo "Version **${{ steps.release.outputs.tag }}** has been successfully published."
          } >> "$GITHUB_STEP_SUMMARY"